[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "genflow-backend"
version = "0.1.0"
description = "AI Agent Flow Engine Backend"
authors = [
    {name = "GenFlow Team", email = "team@genflow.dev"},
]
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "pydantic>=2.6.3",
    "pydantic-settings>=2.2.1",
    "sqlalchemy>=2.0.28",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.9",
    "fastapi-cache2>=0.2.1",
    "redis>=5.0.3",
    "aiofiles>=23.2.1",
    "python-dotenv>=1.0.1",
    "loguru>=0.7.2",
    "httpx>=0.27.0",
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "black>=24.2.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "ruff>=0.3.0",
    "pre-commit>=3.6.2",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
(
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
lines_after_imports = 2
line_length = 100
include_trailing_comma = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']

[tool.mypy]
python_version = "3.12"
exclude = ["migrations/"]
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastapi_cache.*",
    "redis.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".git", "__pycache__", ".mypy_cache", ".pytest_cache", "migrations"]
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "I",   # isort
    "RUF", # ruff-specific rules
]
lint.ignore = [
    "B904",
    "B006",
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.coverage.report]
fail_under = 20
exclude_also = [
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "\\.\\.\\.",
]

[tool.coverage.run]
omit = ['*tests/*']
